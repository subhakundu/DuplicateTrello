{"ast":null,"code":"var _jsxFileName = \"/Users/subhakundu/Projects/GitHub/DuplicateTrello/trello-clone-react-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Board from \"./components/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:9080/api/boards\").then(response => {\n      setBoards(response.data);\n    });\n  }, []);\n  const moveTask = (taskId, sourceBoardId, targetBoardId) => {\n    axios.post(\"http://localhost:3000/api/move-task\", {\n      taskId,\n      sourceBoardId,\n      targetBoardId\n    }).then(() => {\n      setBoards(prevBoards => {\n        const updatedBoards = [...prevBoards];\n        const sourceBoard = updatedBoards.find(b => b.id === sourceBoardId);\n        const targetBoard = updatedBoards.find(b => b.id === targetBoardId);\n        if (sourceBoard && targetBoard) {\n          const taskIndex = sourceBoard.tasks.findIndex(t => t.id === taskId);\n          const [task] = sourceBoard.tasks.splice(taskIndex, 1);\n          targetBoard.tasks.push(task);\n        }\n        return updatedBoards;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-center mb-4\",\n        children: \"Trello Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: boards.map(board => /*#__PURE__*/_jsxDEV(Board, {\n          board: board,\n          moveTask: moveTask\n        }, board.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","DndProvider","HTML5Backend","Board","jsxDEV","_jsxDEV","App","_s","boards","setBoards","get","then","response","data","moveTask","taskId","sourceBoardId","targetBoardId","post","prevBoards","updatedBoards","sourceBoard","find","b","id","targetBoard","taskIndex","tasks","findIndex","t","task","splice","push","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","board","_c","$RefreshReg$"],"sources":["/Users/subhakundu/Projects/GitHub/DuplicateTrello/trello-clone-react-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Board from \"./components/Board\";\n\nfunction App() {\n  const [boards, setBoards] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:9080/api/boards\").then((response) => {\n      setBoards(response.data);\n    });\n  }, []);\n\n  const moveTask = (taskId, sourceBoardId, targetBoardId) => {\n    axios\n      .post(\"http://localhost:3000/api/move-task\", {\n        taskId,\n        sourceBoardId,\n        targetBoardId,\n      })\n      .then(() => {\n        setBoards((prevBoards) => {\n          const updatedBoards = [...prevBoards];\n          const sourceBoard = updatedBoards.find((b) => b.id === sourceBoardId);\n          const targetBoard = updatedBoards.find((b) => b.id === targetBoardId);\n\n          if (sourceBoard && targetBoard) {\n            const taskIndex = sourceBoard.tasks.findIndex((t) => t.id === taskId);\n            const [task] = sourceBoard.tasks.splice(taskIndex, 1);\n            targetBoard.tasks.push(task);\n          }\n\n          return updatedBoards;\n        });\n      });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"min-h-screen bg-gray-100 p-4\">\n        <h1 className=\"text-2xl font-bold text-center mb-4\">Trello Clone</h1>\n        <div className=\"flex gap-4\">\n          {boards.map((board) => (\n            <Board key={board.id} board={board} moveTask={moveTask} />\n          ))}\n        </div>\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACU,GAAG,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC/DH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAEC,aAAa,EAAEC,aAAa,KAAK;IACzDjB,KAAK,CACFkB,IAAI,CAAC,qCAAqC,EAAE;MAC3CH,MAAM;MACNC,aAAa;MACbC;IACF,CAAC,CAAC,CACDN,IAAI,CAAC,MAAM;MACVF,SAAS,CAAEU,UAAU,IAAK;QACxB,MAAMC,aAAa,GAAG,CAAC,GAAGD,UAAU,CAAC;QACrC,MAAME,WAAW,GAAGD,aAAa,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKR,aAAa,CAAC;QACrE,MAAMS,WAAW,GAAGL,aAAa,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,aAAa,CAAC;QAErE,IAAII,WAAW,IAAII,WAAW,EAAE;UAC9B,MAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKT,MAAM,CAAC;UACrE,MAAM,CAACe,IAAI,CAAC,GAAGT,WAAW,CAACM,KAAK,CAACI,MAAM,CAACL,SAAS,EAAE,CAAC,CAAC;UACrDD,WAAW,CAACE,KAAK,CAACK,IAAI,CAACF,IAAI,CAAC;QAC9B;QAEA,OAAOV,aAAa;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,OAAA,CAACJ,WAAW;IAACgC,OAAO,EAAE/B,YAAa;IAAAgC,QAAA,eACjC7B,OAAA;MAAK8B,SAAS,EAAC,8BAA8B;MAAAD,QAAA,gBAC3C7B,OAAA;QAAI8B,SAAS,EAAC,qCAAqC;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrElC,OAAA;QAAK8B,SAAS,EAAC,YAAY;QAAAD,QAAA,EACxB1B,MAAM,CAACgC,GAAG,CAAEC,KAAK,iBAChBpC,OAAA,CAACF,KAAK;UAAgBsC,KAAK,EAAEA,KAAM;UAAC3B,QAAQ,EAAEA;QAAS,GAA3C2B,KAAK,CAACjB,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqC,CAC1D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAElB;AAAChC,EAAA,CA7CQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}